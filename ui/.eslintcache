[{"/Users/rupin/Projects/snippets/ui/src/index.jsx":"1","/Users/rupin/Projects/snippets/ui/src/components/App.jsx":"2","/Users/rupin/Projects/snippets/ui/src/components/Header.jsx":"3","/Users/rupin/Projects/snippets/ui/src/components/Sidebar.jsx":"4","/Users/rupin/Projects/snippets/ui/src/components/SnippetView.jsx":"5","/Users/rupin/Projects/snippets/ui/src/data/test.js":"6","/Users/rupin/Projects/snippets/ui/src/components/Tags.jsx":"7"},{"size":301,"mtime":1653244625164,"results":"8","hashOfConfig":"9"},{"size":1380,"mtime":1653244625155,"results":"10","hashOfConfig":"9"},{"size":306,"mtime":1653244625155,"results":"11","hashOfConfig":"9"},{"size":1053,"mtime":1653244625156,"results":"12","hashOfConfig":"9"},{"size":3024,"mtime":1653244625156,"results":"13","hashOfConfig":"9"},{"size":2411,"mtime":1653244625163,"results":"14","hashOfConfig":"9"},{"size":1860,"mtime":1653244625157,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lyebv",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},"/Users/rupin/Projects/snippets/ui/src/index.jsx",[],"/Users/rupin/Projects/snippets/ui/src/components/App.jsx",[],["33","34"],"/Users/rupin/Projects/snippets/ui/src/components/Header.jsx",[],"/Users/rupin/Projects/snippets/ui/src/components/Sidebar.jsx",[],"/Users/rupin/Projects/snippets/ui/src/components/SnippetView.jsx",["35","36","37","38","39","40"],"import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport Prism from 'prismjs';\nimport { faArrowLeft, faTags, faCode, faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './SnippetView.css';\n\n\nfunction SnippetView() {\n\n    let params = useParams();\n    let history = useHistory();\n\n    let [snippets, setSnippets] = useState([]);\n\n    // useEffect hook is used to achieve the \n    // componentDidMount lifecycle. This is required\n    // to trigger Prims to look at the <pre>/<code>\n    // html element and syntax highlight the code with using the \n    // css class that specifies the target highlight language \n    useEffect(() => {\n        Prism.highlightAll();\n        fetch(`http://localhost:9000/snippet/${params.tagName}`)\n            .then(response => response.json())\n            .then(data => setSnippets(data))\n    }, []);\n\n    function backClick(e) {\n        e.preventDefault();\n        history.push(\"/inbox\");\n    }\n\n    let backIcon = <FontAwesomeIcon icon={faArrowLeft} />\n    let codeIcon = <FontAwesomeIcon icon={faCode} />\n    let upvoteIcon = <FontAwesomeIcon icon={faArrowUp} />\n    let downvoteIcon = <FontAwesomeIcon icon={faArrowDown} />\n\n    return (\n        <div className=\"row\">\n            {/* <ul className=\"list-group list-group-horizontal\"> */}\n            {/* <button onClick={backClick} className=\"list-group-item\">{backIcon}</button> */}\n            {/* <li className=\"list-group-item\">{topicIcon} {topicName} { }</li> */}\n            {/* </ul> */}\n            <h1>{params.tagName}</h1>\n            <div className=\"row row-cols-1 row-cols-md-1 g-4 add-scroll\">\n                {snippets.length !== 0 && snippets.map((snippet) => (\n                    <div className=\"col\" key={snippet.id}>\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                {snippet.name} {codeIcon}\n                            </div>\n                            <div className=\"card-body\">\n                                <pre className=\"lang-clike\"\n                                    style={{ border: \"none\", padding: \"2px\", marginBottom: \"10px\", marginTop: \"1px\" }}>\n                                    <code>\n                                        {Buffer.from(snippet.content, 'base64').toString('utf-8')}\n                                    </code>\n                                </pre>\n                            </div>\n                            <div className=\"card-footer text-muted\">\n                                {/* {upvoteIcon} 12  {downvoteIcon} 3  By: {data.Author} ({data.DateCreated}) | File name: {data.FileName} | Language: {data.Language */}\n                                {/* } */}\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default SnippetView;","/Users/rupin/Projects/snippets/ui/src/data/test.js",[],"/Users/rupin/Projects/snippets/ui/src/components/Tags.jsx",["41"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { feedData } from '../data/test';\n\nfunction Tags() {\n\n    // the useHistory hook returns the current history\n    // context that is used to programmatically navigate \n    // to a different component.\n    let history = useHistory();\n    let [tags, setTags] = useState([]);\n\n    function inboxItemClickHandler(tagName, e) {\n        e.preventDefault();\n        history.push(\"/snippetView/\" + tagName)\n    }\n\n    useEffect(() => {\n        fetch('http://localhost:9000/tag')\n            .then(response => response.json())\n            .then(data => setTags(data))\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"list-group\">\n                {tags.length !== 0 &&\n                    tags.map((tag) => {\n                        return (\n                            <li className=\"list-group-item list-group-item-action\"\n                                key={tag.id}\n                                onClick={(e) => inboxItemClickHandler(tag.name, e)}>\n                                <div className=\"row\" >\n                                    <div className=\"col-3\">\n                                        <b>{tag.name}</b>\n                                        <span style={{ marginLeft: \"4px\" }}\n                                            className=\"badge bg-primary rounded-pill\">+{10}</span>\n                                    </div>\n                                    <div className=\"col-6\">\n                                        <em>{\"Some description\"}</em>\n                                    </div>\n                                </div>\n                            </li>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Tags;\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":23,"nodeType":"48","messageId":"49","endLine":4,"endColumn":29},{"ruleId":"50","severity":1,"message":"51","line":27,"column":8,"nodeType":"52","endLine":27,"endColumn":10,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"54","line":29,"column":14,"nodeType":"48","messageId":"49","endLine":29,"endColumn":23},{"ruleId":"46","severity":1,"message":"55","line":34,"column":9,"nodeType":"48","messageId":"49","endLine":34,"endColumn":17},{"ruleId":"46","severity":1,"message":"56","line":36,"column":9,"nodeType":"48","messageId":"49","endLine":36,"endColumn":19},{"ruleId":"46","severity":1,"message":"57","line":37,"column":9,"nodeType":"48","messageId":"49","endLine":37,"endColumn":21},{"ruleId":"46","severity":1,"message":"58","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":18},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'faTags' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.tagName'. Either include it or remove the dependency array.","ArrayExpression",["61"],"'backClick' is defined but never used.","'backIcon' is assigned a value but never used.","'upvoteIcon' is assigned a value but never used.","'downvoteIcon' is assigned a value but never used.","'feedData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [params.tagName]",{"range":"64","text":"65"},[971,973],"[params.tagName]"]